<a href="/">&larr; 뒤로</a>
<div class="admin-title">
  <h2>편집</h2>
  <!--<form action="/delete/<%= rowArr[0] %>?_method=DELETE" method="POST" onsubmit="return confirmDelete();">
    <input type="submit" value="삭제" class="btn-delete btn">
  </form>-->
</div>

<form id="myForm" action="/edit/<%= rowArr[0] %>?_method=PUT" method="POST" enctype="multipart/form-data">
  <table style="margin-bottom: 15px;" class="table-wrapper">
    <thead>
      <tr>
        <% colNames.forEach(name => { %>
        <th><%= name %></th>
        <% }); %>
        <th>첨부파일</th>
      </tr>
    </thead>
    <thead>
    <tbody>
      <tr>
        <% for(let i = 1; i < rowArr.length; ++i) { %>
        <td> <input style="margin: auto;" type="text" value="<%= rowArr[i] %>" name="<%= i %>"> </td>
        <% } %>
        <td style="max-width: 500px; min-width: 300px;">
          <% for(let i = 0; i < fileName.length; ++i) { %>
          <div>
            <%= fileName[i] %>
            <a href="/deletefile/<%= rowArr[0] %>?fileName=<%= encodeURIComponent(fileName[i]) %>" onclick="return confirmDelete();">&times</a>
          </div>
          <% } %>
        </td>
        <td>
          <a href="/delete/<%= rowArr[0] %>" class="btn-delete btn" onclick="return confirmDelete();">삭제</a>
        </td>
      </tr>
      <tr>
        <td colspan="<%= indices.length + 1 %>">
          <div id="fileDropzone" class="dropzone" style="text-align: left;"></div>
        </td>
      </tr>
    </tbody>
  </table>
  <!--<div id="fileDropzone" class="dropzone"></div>-->
  <input type="submit" id="submit-btn" value="등록" class="btn" style="margin-top: 20px;">
  <div id="loading-spinner" class="loading-spinner">파일을 업로드 중입니다... 절대 끄지 마세요</div>
</form>

<script>
  // Dropzone 초기화
  Dropzone.autoDiscover = false; // Dropzone의 자동 탐지를 방지

  const myDropzone = new Dropzone("#fileDropzone", {
    url: "/upload", // 실제 파일 업로드는 여기서 하지 않음
    autoProcessQueue: false, // 자동으로 서버로 전송하지 않음
    uploadMultiple: true, // 여러 파일을 한 번에 업로드 가능
    maxFilesize: 1024, // 최대 파일 크기 (MB)
    addRemoveLinks: true, // 파일 삭제 링크 추가
    dictRemoveFile: "삭제",
    dictDefaultMessage: "여기로 추가할 파일을 드래그 앤 드롭 하세요",
    parallelUploads: 10, // 한 번에 여러 파일 처리
    showProgress: false,
  });

  // 폼 제출 시 파일과 데이터를 함께 전송
  document.getElementById("myForm").addEventListener("submit", function(e) {
    let check = confirm("등록하시겠습니까?");
    if (!check) {
      e.preventDefault();
      return;
    }

    // 로딩 스피너 표시 및 제출 버튼 비활성화
    document.getElementById("loading-spinner").style.display = "block";
    document.getElementById("submit-btn").disabled = true;

    // Dropzone의 파일을 폼 데이터에 추가
    myDropzone.files.forEach((file) => {
      const dataTransfer = new DataTransfer(); // 데이터 전송 객체 생성
      dataTransfer.items.add(file); // 파일 추가
      myDropzone.removeFile(file); // Dropzone에서 파일 제거
      const fileInput = document.createElement("input");
      fileInput.type = "file";
      fileInput.name = "files"; // 파일 배열로 전송
      fileInput.files = dataTransfer.files; // 파일을 FileList로 설정
      this.appendChild(fileInput); // 동적으로 폼에 추가
    });

    // 기본 제출 방지 후 폼 제출
    this.submit(); // 이제 폼 데이터를 기본 제출 방식으로 전송
  });
</script>

<script>
  function confirmDelete() {
    return confirm("정말 삭제하시겠습니까?");
  }

  function confirmRegist() {
    return confirm("등록하시겠습니까?");
  }
</script>